/// Verilog Memory Probe File (.prb) generated by ./ex3_asm

/// bit[31:28] : memory type (0000 : data, 1111 : end-of-memory
/// bit[27:16] : address
/// bit[15:0]  : data

// interrupt entry point
00000000	///	        ST0: 0000 [0000]: (    0:    0)            	// interrupt return address
001a0223	///	             001a [0223]: (  547:  547)            
001b029a	///	             001b [029a]: (  666:  666)            
003f0240	///	             003f [0240]: (  576:  576)            
004a0000	///	   PRP_TURN: 004a [0000]: (    0:    0)            	// return address
0084028c	///	             0084 [028c]: (  652:  652)            
0092023b	///	             0092 [023b]: (  571:  571)            
00aa0000	///	     RESULT: 00aa [0000]: (    0:    0)            	// (arg1) "you win!" or "I win!" or "it's a tie..."
00ab029a	///	             00ab [029a]: (  666:  666)            
00b10000	///	  SHOW_GAME: 00b1 [0000]: (    0:    0)            	// return address
00d402bd	///	             00d4 [02bd]: (  701:  701)            
00d502c3	///	             00d5 [02c3]: (  707:  707)            
00d602bd	///	             00d6 [02bd]: (  701:  701)            
00d70000	///	     NXT_MV: 00d7 [0000]: (    0:    0)            	// (arg4) "your move!" or "my move!" or "game over!"
00d90000	///	    PRT_BRD: 00d9 [0000]: (    0:    0)            	// return address
00e30000	///	   UPD_TURN: 00e3 [0000]: (    0:    0)            
00f50000	///	   CHK_CH_N: 00f5 [0000]: (    0:    0)            
00fa0000	///	      CHK_3: 00fa [0000]: (    0:    0)            
01120000	///	    CHK_WIN: 0112 [0000]: (    0:    0)            
01220000	///	  MY_DM_MOV: 0122 [0000]: (    0:    0)            
012b0000	///	     MY_MOV: 012b [0000]: (    0:    0)            
01440000	///	    LD_TBRD: 0144 [0000]: (    0:    0)            
014e0000	///	        WBF: 014e [0000]: (    0:    0)            
01730000	///	    WBF_POS: 0173 [0000]: (    0:    0)            
018b0000	///	    SET_MGP: 018b [0000]: (    0:    0)            
01990000	///	     SET_ML: 0199 [0000]: (    0:    0)            
01b20000	///	     LD_MSG: 01b2 [0000]: (    0:    0)            
// data (no initialization)
01d90000	///	        TMA: 01d9 [0000]: (    0:    0)            	// temporal
01da0000	///	        TMB: 01da [0000]: (    0:    0)            	// temporal
01db0000	///	        TMI: 01db [0000]: (    0:    0)            	// char (raw) input
01dc0000	///	         BA: 01dc [0000]: (    0:    0)            	// backup storage for AC during interrupt handling
01dd0000	///	         BE: 01dd [0000]: (    0:    0)            	// backup storage for  E during interrupt handling
01de0000	///	     PTR_MG: 01de [0000]: (    0:    0)            	// message pointer
01df0000	///	      CNT_1: 01df [0000]: (    0:    0)            	// counter 1
01e00000	///	      CNT_2: 01e0 [0000]: (    0:    0)            	// counter 2
01e10000	///	     CNT_CH: 01e1 [0000]: (    0:    0)            	// char counter
01e20000	///	      P_BRD: 01e2 [0000]: (    0:    0)            	// pointer to BRD
01e30000	///	   P_MY_LNC: 01e3 [0000]: (    0:    0)            	// pointer to MY_LNC
01e40000	///	   P_YR_LNC: 01e4 [0000]: (    0:    0)            	// pointer to YR_LNC
01e50000	///	    BRD_OFS: 01e5 [0000]: (    0:    0)            	// BRD offset
01e60000	///	    BRD_POS: 01e6 [0000]: (    0:    0)            	// BRD pos
01e70000	///	    N_P_BRD: 01e7 [0000]: (    0:    0)            	// pointer to BRD for my next move
01e80000	///	      BRD_1: 01e8 [0000]: (    0:    0)            	// brd[pos1]
01e90000	///	      BRD_2: 01e9 [0000]: (    0:    0)            	// brd[pos2]
01ea0000	///	  BRD_SUM_N: 01ea [0000]: (    0:    0)            	// -(brd[pos1] + brd[pos2])
01eb0000	///	      MY_LN: 01eb [0000]: (    0:    0)            	// myLine
01ec0000	///	     MY_BLK: 01ec [0000]: (    0:    0)            	// myBlock
// data (need initialization code : one-time)
01ed0000	///	        BYE: 01ed [0000]: (    0:    0)            	// (init: 0) bye
01ee0000	///	    NXT_BYE: 01ee [0000]: (    0:    0)            	// (init: 0) next bye
01ef0000	///	        STT: 01ef [0000]: (    0:    0)            	// (init: 0) current state
01f00000	///	    NXT_STT: 01f0 [0000]: (    0:    0)            	// (init: 0) next state
01f10000	///	    OUT_STT: 01f1 [0000]: (    0:    0)            	// (init: 0) output state
01f20000	///	    NXT_INP: 01f2 [0000]: (    0:    0)            	// (init: 0) next process input
01f30000	///	     CNT_MG: 01f3 [0000]: (    0:    0)            	// message count
01f40000	///	   P_MG_LST: 01f4 [0000]: (    0:    0)            	// message list pointer
01f501f6	///	   A_MG_LST: 01f5 [01f6]: (  502:  502)            
01f60000	///	     MG_LST: 01f6 [0000]: (    0:    0)            	// message pointer list (up to 8+2 messages)
01f70000	///	             01f7 [0000]: (    0:    0)            
01f80000	///	             01f8 [0000]: (    0:    0)            
01f90000	///	             01f9 [0000]: (    0:    0)            
01fa0000	///	             01fa [0000]: (    0:    0)            
01fb0000	///	             01fb [0000]: (    0:    0)            
01fc0000	///	             01fc [0000]: (    0:    0)            
01fd0000	///	             01fd [0000]: (    0:    0)            
01fe0000	///	             01fe [0000]: (    0:    0)            
01ff0000	///	             01ff [0000]: (    0:    0)            
// data (need initialization code : after every game -> INI_GM)
02000000	///	    CNT_MOV: 0200 [0000]: (    0:    0)            	// move counter
02010000	///	       TURN: 0201 [0000]: (    0:    0)            	// 0 : your turn, 1 : my turn
02020000	///	     WINNER: 0202 [0000]: (    0:    0)            	// winner
// BRD : brd[9]
// position : on screen
//    012       123
//    345       456
//    678       789
02030204	///	      A_BRD: 0203 [0204]: (  516:  516)            
02040000	///	        BRD: 0204 [0000]: (    0:    0)            
02050000	///	             0205 [0000]: (    0:    0)            
02060000	///	             0206 [0000]: (    0:    0)            
02070000	///	             0207 [0000]: (    0:    0)            
02080000	///	             0208 [0000]: (    0:    0)            
02090000	///	             0209 [0000]: (    0:    0)            
020a0000	///	             020a [0000]: (    0:    0)            
020b0000	///	             020b [0000]: (    0:    0)            
020c0000	///	             020c [0000]: (    0:    0)            
// data (read-only)
020dfff0	///	        AMK: 020d [fff0]: (  -16:65520)            	// AMK = FFF0 (and mask)
020e000f	///	       AMKN: 020e [000f]: (   15:   15)            	// AMKN = 000F (and mask negated)
020f0001	///	        VH1: 020f [0001]: (    1:    1)            	// VH1 = 1
02100002	///	        VH2: 0210 [0002]: (    2:    2)            	// VH2 = 2
02110003	///	        VH3: 0211 [0003]: (    3:    3)            	// VH3 = 3
02120004	///	        VH4: 0212 [0004]: (    4:    4)            	// VH4 = 4
02130005	///	        VH5: 0213 [0005]: (    5:    5)            	// VH5 = 5
02140008	///	        VH8: 0214 [0008]: (    8:    8)            	// VH5 = 8
0215ffff	///	        VM1: 0215 [ffff]: (   -1:65535)            	// VM1 = -1
0216fffe	///	        VM2: 0216 [fffe]: (   -2:65534)            	// VM2 = -2
0217fffd	///	        VM3: 0217 [fffd]: (   -3:65533)            	// VM2 = -3
0218fffc	///	        VM4: 0218 [fffc]: (   -4:65532)            	// VM2 = -4
0219fff8	///	        VM8: 0219 [fff8]: (   -8:65528)            	// VM2 = -8
021afff7	///	        VM9: 021a [fff7]: (   -9:65527)            	// VM2 = -9
021bfff6	///	       VM10: 021b [fff6]: (  -10:65526)            	// VM10 = -10
021c0030	///	       CH_0: 021c [0030]: (   48:  '0')            
021d0031	///	       CH_1: 021d [0031]: (   49:  '1')            
021e0079	///	      CH_LY: 021e [0079]: (  121:  'y')            
021f0058	///	      MY_MK: 021f [0058]: (   88:  'X')            
0220004f	///	      YR_MK: 0220 [004f]: (   79:  'O')            
022100b0	///	    MY_MK_2: 0221 [00b0]: (  176:  176)            	// (0x58('X') * 2)
0222009e	///	    YR_MK_2: 0222 [009e]: (  158:  158)            	// (0x4F('O') * 2)
02230017	///	    MG_WELC: 0223 [0017]: (   23:   23)            	// MG_WELC length
02240057	///	             0224 [0057]: (   87:  'W')            
02250045	///	             0225 [0045]: (   69:  'E')            
0226004c	///	             0226 [004c]: (   76:  'L')            
02270043	///	             0227 [0043]: (   67:  'C')            
0228004f	///	             0228 [004f]: (   79:  'O')            
0229004d	///	             0229 [004d]: (   77:  'M')            
022a0045	///	             022a [0045]: (   69:  'E')            
022b0020	///	             022b [0020]: (   32:  ' ')            	// ' '
022c0054	///	             022c [0054]: (   84:  'T')            
022d004f	///	             022d [004f]: (   79:  'O')            
022e0020	///	             022e [0020]: (   32:  ' ')            	// ' '
022f0054	///	             022f [0054]: (   84:  'T')            
02300049	///	             0230 [0049]: (   73:  'I')            
02310043	///	             0231 [0043]: (   67:  'C')            
0232002d	///	             0232 [002d]: (   45:  '-')            
02330054	///	             0233 [0054]: (   84:  'T')            
02340041	///	             0234 [0041]: (   65:  'A')            
02350043	///	             0235 [0043]: (   67:  'C')            
0236002d	///	             0236 [002d]: (   45:  '-')            
02370054	///	             0237 [0054]: (   84:  'T')            
0238004f	///	             0238 [004f]: (   79:  'O')            
02390045	///	             0239 [0045]: (   69:  'E')            
023a0021	///	             023a [0021]: (   33:  '!')            
023b0001	///	   MG_MY_MV: 023b [0001]: (    1:    1)            	// MG_MY_MV length
023c0000	///	  MG_MY_MV0: 023c [0000]: (    0:    0)            
023d023e	///	    A_MG_NL: 023d [023e]: (  574:  574)            
023e0001	///	      MG_NL: 023e [0001]: (    1:    1)            	// MG_NL length
023f000a	///	             023f [000a]: (   10:   10)            	// '\n'
02400008	///	     MG_BYE: 0240 [0008]: (    8:    8)            	// MG_BYE length
02410062	///	             0241 [0062]: (   98:  'b')            
02420079	///	             0242 [0079]: (  121:  'y')            
02430065	///	             0243 [0065]: (  101:  'e')            
0244002d	///	             0244 [002d]: (   45:  '-')            
02450062	///	             0245 [0062]: (   98:  'b')            
02460079	///	             0246 [0079]: (  121:  'y')            
02470065	///	             0247 [0065]: (  101:  'e')            
02480021	///	             0248 [0021]: (   33:  '!')            
0249024a	///	   A_MG_YMV: 0249 [024a]: (  586:  586)            
024a000a	///	     MG_YMV: 024a [000a]: (   10:   10)            	// MG_YMV length
024b0079	///	             024b [0079]: (  121:  'y')            
024c006f	///	             024c [006f]: (  111:  'o')            
024d0075	///	             024d [0075]: (  117:  'u')            
024e0072	///	             024e [0072]: (  114:  'r')            
024f0020	///	             024f [0020]: (   32:  ' ')            	// ' '
0250006d	///	             0250 [006d]: (  109:  'm')            
0251006f	///	             0251 [006f]: (  111:  'o')            
02520076	///	             0252 [0076]: (  118:  'v')            
02530065	///	             0253 [0065]: (  101:  'e')            
02540021	///	             0254 [0021]: (   33:  '!')            
02550256	///	   A_MG_MMV: 0255 [0256]: (  598:  598)            
02560008	///	     MG_MMV: 0256 [0008]: (    8:    8)            	// MG_MMV length
0257006d	///	             0257 [006d]: (  109:  'm')            
02580079	///	             0258 [0079]: (  121:  'y')            
02590020	///	             0259 [0020]: (   32:  ' ')            	// ' '
025a006d	///	             025a [006d]: (  109:  'm')            
025b006f	///	             025b [006f]: (  111:  'o')            
025c0076	///	             025c [0076]: (  118:  'v')            
025d0065	///	             025d [0065]: (  101:  'e')            
025e0021	///	             025e [0021]: (   33:  '!')            
025f0260	///	   A_MG_GMO: 025f [0260]: (  608:  608)            
0260000a	///	     MG_GMO: 0260 [000a]: (   10:   10)            	// MG_GMO length
02610067	///	             0261 [0067]: (  103:  'g')            
02620061	///	             0262 [0061]: (   97:  'a')            
0263006d	///	             0263 [006d]: (  109:  'm')            
02640065	///	             0264 [0065]: (  101:  'e')            
02650020	///	             0265 [0020]: (   32:  ' ')            	// ' '
0266006f	///	             0266 [006f]: (  111:  'o')            
02670076	///	             0267 [0076]: (  118:  'v')            
02680065	///	             0268 [0065]: (  101:  'e')            
02690072	///	             0269 [0072]: (  114:  'r')            
026a0021	///	             026a [0021]: (   33:  '!')            
026b026c	///	   A_MG_YWN: 026b [026c]: (  620:  620)            
026c0008	///	     MG_YWN: 026c [0008]: (    8:    8)            	// MG_YWN length
026d0079	///	             026d [0079]: (  121:  'y')            
026e006f	///	             026e [006f]: (  111:  'o')            
026f0075	///	             026f [0075]: (  117:  'u')            
02700020	///	             0270 [0020]: (   32:  ' ')            	// ' '
02710077	///	             0271 [0077]: (  119:  'w')            
02720069	///	             0272 [0069]: (  105:  'i')            
0273006e	///	             0273 [006e]: (  110:  'n')            
02740021	///	             0274 [0021]: (   33:  '!')            
02750276	///	   A_MG_IWN: 0275 [0276]: (  630:  630)            
02760006	///	     MG_IWN: 0276 [0006]: (    6:    6)            	// MG_IWN length
02770049	///	             0277 [0049]: (   73:  'I')            
02780020	///	             0278 [0020]: (   32:  ' ')            	// ' '
02790077	///	             0279 [0077]: (  119:  'w')            
027a0069	///	             027a [0069]: (  105:  'i')            
027b006e	///	             027b [006e]: (  110:  'n')            
027c0021	///	             027c [0021]: (   33:  '!')            
027d027e	///	   A_MG_TIE: 027d [027e]: (  638:  638)            
027e000d	///	     MG_TIE: 027e [000d]: (   13:   13)            	// MG_TIE length
027f0069	///	             027f [0069]: (  105:  'i')            
02800074	///	             0280 [0074]: (  116:  't')            
02810027	///	             0281 [0027]: (   39:  ''')            
02820073	///	             0282 [0073]: (  115:  's')            
02830020	///	             0283 [0020]: (   32:  ' ')            	// ' '
02840061	///	             0284 [0061]: (   97:  'a')            
02850020	///	             0285 [0020]: (   32:  ' ')            	// ' '
02860074	///	             0286 [0074]: (  116:  't')            
02870069	///	             0287 [0069]: (  105:  'i')            
02880065	///	             0288 [0065]: (  101:  'e')            
0289002e	///	             0289 [002e]: (   46:  '.')            
028a002e	///	             028a [002e]: (   46:  '.')            
028b002e	///	             028b [002e]: (   46:  '.')            
028c000d	///	    MG_IVMV: 028c [000d]: (   13:   13)            	// MG_IVMV length
028d0069	///	             028d [0069]: (  105:  'i')            
028e006e	///	             028e [006e]: (  110:  'n')            
028f0076	///	             028f [0076]: (  118:  'v')            
02900061	///	             0290 [0061]: (   97:  'a')            
0291006c	///	             0291 [006c]: (  108:  'l')            
02920069	///	             0292 [0069]: (  105:  'i')            
02930064	///	             0293 [0064]: (  100:  'd')            
02940020	///	             0294 [0020]: (   32:  ' ')            	// ' '
0295006d	///	             0295 [006d]: (  109:  'm')            
0296006f	///	             0296 [006f]: (  111:  'o')            
02970076	///	             0297 [0076]: (  118:  'v')            
02980065	///	             0298 [0065]: (  101:  'e')            
02990021	///	             0299 [0021]: (   33:  '!')            
029a0022	///	     MG_WHG: 029a [0022]: (   34:  '"')            	// MG_WHG length
029b000a	///	             029b [000a]: (   10:   10)            	// '\n'
029c0077	///	             029c [0077]: (  119:  'w')            
029d0068	///	             029d [0068]: (  104:  'h')            
029e006f	///	             029e [006f]: (  111:  'o')            
029f0020	///	             029f [0020]: (   32:  ' ')            	// ' '
02a00067	///	             02a0 [0067]: (  103:  'g')            
02a1006f	///	             02a1 [006f]: (  111:  'o')            
02a20065	///	             02a2 [0065]: (  101:  'e')            
02a30073	///	             02a3 [0073]: (  115:  's')            
02a40020	///	             02a4 [0020]: (   32:  ' ')            	// ' '
02a50066	///	             02a5 [0066]: (  102:  'f')            
02a60069	///	             02a6 [0069]: (  105:  'i')            
02a70072	///	             02a7 [0072]: (  114:  'r')            
02a80073	///	             02a8 [0073]: (  115:  's')            
02a90074	///	             02a9 [0074]: (  116:  't')            
02aa003f	///	             02aa [003f]: (   63:  '?')            
02ab0020	///	             02ab [0020]: (   32:  ' ')            	// ' '
02ac0028	///	             02ac [0028]: (   40:  '(')            
02ad0030	///	             02ad [0030]: (   48:  '0')            
02ae003a	///	             02ae [003a]: (   58:  ':')            
02af0059	///	             02af [0059]: (   89:  'Y')            
02b0004f	///	             02b0 [004f]: (   79:  'O')            
02b10055	///	             02b1 [0055]: (   85:  'U')            
02b2002c	///	             02b2 [002c]: (   44:  ',')            
02b30020	///	             02b3 [0020]: (   32:  ' ')            	// ' '
02b40031	///	             02b4 [0031]: (   49:  '1')            
02b5003a	///	             02b5 [003a]: (   58:  ':')            
02b6004d	///	             02b6 [004d]: (   77:  'M')            
02b70045	///	             02b7 [0045]: (   69:  'E')            
02b8002c	///	             02b8 [002c]: (   44:  ',')            
02b90020	///	             02b9 [0020]: (   32:  ' ')            	// ' '
02ba0071	///	             02ba [0071]: (  113:  'q')            
02bb0029	///	             02bb [0029]: (   41:  ')')            
02bc003a	///	             02bc [003a]: (   58:  ':')            
02bd0004	///	    MG_SEPR: 02bd [0004]: (    4:    4)            	// MG_SEPR length
02be002d	///	             02be [002d]: (   45:  '-')            
02bf002d	///	             02bf [002d]: (   45:  '-')            
02c0002d	///	             02c0 [002d]: (   45:  '-')            
02c1000a	///	             02c1 [000a]: (   10:   10)            	// '\n'
02c202c3	///	   A_MG_BRD: 02c2 [02c3]: (  707:  707)            
02c3000c	///	     MG_BRD: 02c3 [000c]: (   12:   12)            	// MG_BRD length
02c4002d	///	             02c4 [002d]: (   45:  '-')            
02c5002d	///	             02c5 [002d]: (   45:  '-')            
02c6002d	///	             02c6 [002d]: (   45:  '-')            
02c7000a	///	             02c7 [000a]: (   10:   10)            	// '\n'
02c8002d	///	             02c8 [002d]: (   45:  '-')            
02c9002d	///	             02c9 [002d]: (   45:  '-')            
02ca002d	///	             02ca [002d]: (   45:  '-')            
02cb000a	///	             02cb [000a]: (   10:   10)            	// '\n'
02cc002d	///	             02cc [002d]: (   45:  '-')            
02cd002d	///	             02cd [002d]: (   45:  '-')            
02ce002d	///	             02ce [002d]: (   45:  '-')            
02cf000a	///	             02cf [000a]: (   10:   10)            	// '\n'
02d00000	///	       P_CW: 02d0 [0000]: (    0:    0)            	// CW pointer
02d102d2	///	       A_CW: 02d1 [02d2]: (  722:  722)            
// array for CHK_3 parameter
02d20001	///	         CW: 02d2 [0001]: (    1:    1)            	// offset = 1 (0,1,2)
02d30000	///	             02d3 [0000]: (    0:    0)            	// pos    = 0 (0,1,2)
02d40001	///	             02d4 [0001]: (    1:    1)            	// offset = 1 (3,4,5)
02d50003	///	             02d5 [0003]: (    3:    3)            	// pos    = 3 (3,4,5)
02d60001	///	             02d6 [0001]: (    1:    1)            	// offset = 1 (6,7,8)
02d70006	///	             02d7 [0006]: (    6:    6)            	// pos    = 6 (6,7,8)
02d80003	///	             02d8 [0003]: (    3:    3)            	// offset = 3 (0,3,6)
02d90000	///	             02d9 [0000]: (    0:    0)            	// pos    = 0 (0,3,6)
02da0003	///	             02da [0003]: (    3:    3)            	// offset = 3 (1,4,7)
02db0001	///	             02db [0001]: (    1:    1)            	// pos    = 1 (1,4,7)
02dc0003	///	             02dc [0003]: (    3:    3)            	// offset = 3 (2,5,8)
02dd0002	///	             02dd [0002]: (    2:    2)            	// pos    = 2 (2,5,8)
02de0004	///	             02de [0004]: (    4:    4)            	// offset = 4 (0,4,8)
02df0000	///	             02df [0000]: (    0:    0)            	// pos    = 0 (0,4,8)
02e00002	///	             02e0 [0002]: (    2:    2)            	// offset = 2 (2,4,6)
02e10002	///	             02e1 [0002]: (    2:    2)            	// pos    = 2 (2,4,6)
02e20000	///	      P_HVD: 02e2 [0000]: (    0:    0)            	// HVD pointer
02e302e4	///	      A_HVD: 02e3 [02e4]: (  740:  740)            
02e402ec	///	       A_H1: 02e4 [02ec]: (  748:  748)            
02e502f5	///	       A_H2: 02e5 [02f5]: (  757:  757)            
02e602fe	///	       A_V1: 02e6 [02fe]: (  766:  766)            
02e70307	///	       A_V2: 02e7 [0307]: (  775:  775)            
02e80310	///	       A_D1: 02e8 [0310]: (  784:  784)            
02e90319	///	       A_D2: 02e9 [0319]: (  793:  793)            
02ea0322	///	       A_D3: 02ea [0322]: (  802:  802)            
02eb0327	///	       A_D4: 02eb [0327]: (  807:  807)            
02ec0001	///	         H1: 02ec [0001]: (    1:    1)            	// ( H1[0] = 1)
02ed0002	///	             02ed [0002]: (    2:    2)            	// ( H1[1] = 2)
02ee0000	///	             02ee [0000]: (    0:    0)            	// ( H1[2] = 0)
02ef0004	///	             02ef [0004]: (    4:    4)            	// ( H1[3] = 4)
02f00005	///	             02f0 [0005]: (    5:    5)            	// ( H1[4] = 5)
02f10003	///	             02f1 [0003]: (    3:    3)            	// ( H1[5] = 3)
02f20007	///	             02f2 [0007]: (    7:    7)            	// ( H1[6] = 7)
02f30008	///	             02f3 [0008]: (    8:    8)            	// ( H1[7] = 8)
02f40006	///	             02f4 [0006]: (    6:    6)            	// ( H1[8] = 6)
02f50002	///	         H2: 02f5 [0002]: (    2:    2)            	// ( H2[0] = 2)
02f60000	///	             02f6 [0000]: (    0:    0)            	// ( H2[1] = 0)
02f70001	///	             02f7 [0001]: (    1:    1)            	// ( H2[2] = 1)
02f80005	///	             02f8 [0005]: (    5:    5)            	// ( H2[3] = 5)
02f90003	///	             02f9 [0003]: (    3:    3)            	// ( H2[4] = 3)
02fa0004	///	             02fa [0004]: (    4:    4)            	// ( H2[5] = 4)
02fb0008	///	             02fb [0008]: (    8:    8)            	// ( H2[6] = 8)
02fc0006	///	             02fc [0006]: (    6:    6)            	// ( H2[7] = 6)
02fd0007	///	             02fd [0007]: (    7:    7)            	// ( H2[8] = 7)
02fe0003	///	         V1: 02fe [0003]: (    3:    3)            	// ( V1[0] = 3)
02ff0004	///	             02ff [0004]: (    4:    4)            	// ( V1[1] = 4)
03000005	///	             0300 [0005]: (    5:    5)            	// ( V1[2] = 5)
03010006	///	             0301 [0006]: (    6:    6)            	// ( V1[3] = 6)
03020007	///	             0302 [0007]: (    7:    7)            	// ( V1[4] = 7)
03030008	///	             0303 [0008]: (    8:    8)            	// ( V1[5] = 8)
03040000	///	             0304 [0000]: (    0:    0)            	// ( V1[6] = 0)
03050001	///	             0305 [0001]: (    1:    1)            	// ( V1[7] = 1)
03060002	///	             0306 [0002]: (    2:    2)            	// ( V1[8] = 2)
03070006	///	         V2: 0307 [0006]: (    6:    6)            	// ( V2[0] = 6)
03080007	///	             0308 [0007]: (    7:    7)            	// ( V2[1] = 7)
03090008	///	             0309 [0008]: (    8:    8)            	// ( V2[2] = 8)
030a0000	///	             030a [0000]: (    0:    0)            	// ( V2[3] = 0)
030b0001	///	             030b [0001]: (    1:    1)            	// ( V2[4] = 1)
030c0002	///	             030c [0002]: (    2:    2)            	// ( V2[5] = 2)
030d0003	///	             030d [0003]: (    3:    3)            	// ( V2[6] = 3)
030e0004	///	             030e [0004]: (    4:    4)            	// ( V2[7] = 4)
030f0005	///	             030f [0005]: (    5:    5)            	// ( V2[8] = 5)
03100004	///	         D1: 0310 [0004]: (    4:    4)            	// ( D1[0] =  4)
0311ffff	///	             0311 [ffff]: (   -1:65535)            	// ( D1[1] = -1)
03120004	///	             0312 [0004]: (    4:    4)            	// ( D1[2] =  4)
0313ffff	///	             0313 [ffff]: (   -1:65535)            	// ( D1[3] = -1)
03140000	///	             0314 [0000]: (    0:    0)            	// ( D1[4] =  0)
0315ffff	///	             0315 [ffff]: (   -1:65535)            	// ( D1[5] = -1)
03160004	///	             0316 [0004]: (    4:    4)            	// ( D1[6] =  4)
0317ffff	///	             0317 [ffff]: (   -1:65535)            	// ( D1[7] = -1)
03180004	///	             0318 [0004]: (    4:    4)            	// ( D1[8] =  4)
03190008	///	         D2: 0319 [0008]: (    8:    8)            	// ( D2[0] =  8)
031affff	///	             031a [ffff]: (   -1:65535)            	// ( D2[1] = -1)
031b0006	///	             031b [0006]: (    6:    6)            	// ( D2[2] =  6)
031cffff	///	             031c [ffff]: (   -1:65535)            	// ( D2[3] = -1)
031d0008	///	             031d [0008]: (    8:    8)            	// ( D2[4] =  8)
031effff	///	             031e [ffff]: (   -1:65535)            	// ( D2[5] = -1)
031f0002	///	             031f [0002]: (    2:    2)            	// ( D2[6] =  2)
0320ffff	///	             0320 [ffff]: (   -1:65535)            	// ( D2[7] = -1)
03210000	///	             0321 [0000]: (    0:    0)            	// ( D2[8] =  0)
0322ffff	///	         D3: 0322 [ffff]: (   -1:65535)            	// ( D3[0] = -1)
0323ffff	///	             0323 [ffff]: (   -1:65535)            	// ( D3[1] = -1)
0324ffff	///	             0324 [ffff]: (   -1:65535)            	// ( D3[2] = -1)
0325ffff	///	             0325 [ffff]: (   -1:65535)            	// ( D3[3] = -1)
03260002	///	             0326 [0002]: (    2:    2)            	// ( D3[4] =  2)
0327ffff	///	         D4: 0327 [ffff]: (   -1:65535)            	// ( D3[5] = -1)
0328ffff	///	             0328 [ffff]: (   -1:65535)            	// ( D3[6] = -1)
0329ffff	///	             0329 [ffff]: (   -1:65535)            	// ( D3[7] = -1)
032affff	///	             032a [ffff]: (   -1:65535)            	// ( D3[8] = -1)
032b0006	///	             032b [0006]: (    6:    6)            	// ( D4[4] =  6)
f0000000	///	end-of-memory
