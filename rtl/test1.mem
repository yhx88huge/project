/// Verilog Memory Initialization File (.mem) generated by ./ex3_asm

/// 12-bit address
/// 16-bit data

// program entry point
// check (M[Y] = 0) ?
@010 7400	///L0: 0010 [7400]: CLE           	// E <- 0
@011 2023	///    0011 [2023]: LDA 023   ( Y)	// AC <- M[Y]
@012 7004	///    0012 [7004]: SZA           	// (AC == 0) ? skip next
@013 4015	///    0013 [4015]: BUN 015   (LY)	// goto LY
@014 7001	///    0014 [7001]: HLT           
// M[Y] >>= 1
@015 7080	///LY: 0015 [7080]: CIR           	// {AC[15:0], E} <- {E, AC[15:0]}
@016 3023	///    0016 [3023]: STA 023   ( Y)	// M[Y] <- AC
@017 7002	///    0017 [7002]: SZE           	// (E == 0) ? skip next
@018 401d	///    0018 [401d]: BUN 01d   (LP)	// goto LP
// M[X] <<= 1
@019 2022	///LX: 0019 [2022]: LDA 022   ( X)	// AC <- M[X]
@01a 7040	///    001a [7040]: CIL           	// {E, AC[15:0]} <- {AC[15:0], E}
@01b 3022	///    001b [3022]: STA 022   ( X)	// M[X] <- AC
@01c 4010	///    001c [4010]: BUN 010   (L0)	// goto LO
// M[P] += M[X]
@01d 2022	///LP: 001d [2022]: LDA 022   ( X)	// AC <- M[X]
@01e 1024	///    001e [1024]: ADD 024   ( P)	// AC <- AC + M[P]
@01f 3024	///    001f [3024]: STA 024   ( P)	// M[P} <- AC
@020 7400	///    0020 [7400]: CLE           	// E <- 0
@021 4019	///    0021 [4019]: BUN 019   (LX)	// goto LX
// data
@022 ffba	/// X: 0022 [ffba]: (  -70:65466)   	// X = -70 --> X:init
@023 006f	/// Y: 0023 [006f]: (  111:  'o')   	// Y = 111 --> Y:init
@024 0000	/// P: 0024 [0000]: (    0:    0)   	// (init : 0) P = X * Y : result
