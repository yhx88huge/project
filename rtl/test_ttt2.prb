/// Verilog Memory Probe File (.prb) generated by ./ex3_asm

/// bit[31:28] : memory type (0000 : data, 1111 : end-of-memory
/// bit[27:16] : address
/// bit[15:0]  : data

// interrupt entry point
00000022	///	        ST0: 0000 [0022]: (   34:  '"')            	// interrupt return address
001a0227	///	             001a [0227]: (  551:  551)            
001b029e	///	             001b [029e]: (  670:  670)            
00400244	///	             0040 [0244]: (  580:  580)            
004d00f7	///	   PRP_TURN: 004d [00f7]: (  247:  247)            	// return address
00870290	///	             0087 [0290]: (  656:  656)            
0096023f	///	             0096 [023f]: (  575:  575)            
00ae0270	///	     RESULT: 00ae [0270]: (  624:  624)            	// (arg1) "you win!" or "I win!" or "it's a tie..."
00af029e	///	             00af [029e]: (  670:  670)            
00b500f5	///	  SHOW_GAME: 00b5 [00f5]: (  245:  245)            	// return address
00d802c1	///	             00d8 [02c1]: (  705:  705)            
00d902c7	///	             00d9 [02c7]: (  711:  711)            
00da02c1	///	             00da [02c1]: (  705:  705)            
00db0264	///	     NXT_MV: 00db [0264]: (  612:  612)            	// (arg4) "your move!" or "my move!" or "game over!"
00dd00c2	///	    PRT_BRD: 00dd [00c2]: (  194:  194)            	// return address
00e70084	///	   UPD_TURN: 00e7 [0084]: (  132:  132)            
00f9010d	///	   CHK_CH_N: 00f9 [010d]: (  269:  269)            
00fe0121	///	      CHK_3: 00fe [0121]: (  289:  289)            
011600ee	///	    CHK_WIN: 0116 [00ee]: (  238:  238)            
01260145	///	  MY_DM_MOV: 0126 [0145]: (  325:  325)            
012f008c	///	     MY_MOV: 012f [008c]: (  140:  140)            
0148015d	///	    LD_TBRD: 0148 [015d]: (  349:  349)            
0152013b	///	        WBF: 0152 [013b]: (  315:  315)            
01770165	///	    WBF_POS: 0177 [0165]: (  357:  357)            
018f0000	///	    SET_MGP: 018f [0000]: (    0:    0)            
019c0041	///	     SET_ML: 019c [0041]: (   65:  'A')            
01b301d5	///	     LD_MSG: 01b3 [01d5]: (  469:  469)            
// data (no initialization)
01db0000	///	        TMA: 01db [0000]: (    0:    0)            	// temporal
01dc01fa	///	        TMB: 01dc [01fa]: (  506:  506)            	// temporal
01dd0071	///	        TMI: 01dd [0071]: (  113:  'q')            	// char (raw) input
01de0000	///	         BA: 01de [0000]: (    0:    0)            	// backup storage for AC during interrupt handling
01df0000	///	         BE: 01df [0000]: (    0:    0)            	// backup storage for  E during interrupt handling
01e00244	///	     PTR_MG: 01e0 [0244]: (  580:  580)            	// message pointer
01e10000	///	      CNT_1: 01e1 [0000]: (    0:    0)            	// counter 1
01e20000	///	      CNT_2: 01e2 [0000]: (    0:    0)            	// counter 2
01e30000	///	     CNT_CH: 01e3 [0000]: (    0:    0)            	// char counter
01e4020f	///	      P_BRD: 01e4 [020f]: (  527:  527)            	// pointer to BRD
01e50000	///	   P_MY_LNC: 01e5 [0000]: (    0:    0)            	// pointer to MY_LNC
01e60000	///	   P_YR_LNC: 01e6 [0000]: (    0:    0)            	// pointer to YR_LNC
01e70001	///	    BRD_OFS: 01e7 [0001]: (    1:    1)            	// BRD offset
01e80009	///	    BRD_POS: 01e8 [0009]: (    9:    9)            	// BRD pos
01e9020c	///	    N_P_BRD: 01e9 [020c]: (  524:  524)            	// pointer to BRD for my next move
01ea0058	///	      BRD_1: 01ea [0058]: (   88:  'X')            	// brd[pos1]
01eb004f	///	      BRD_2: 01eb [004f]: (   79:  'O')            	// brd[pos2]
01ecff59	///	  BRD_SUM_N: 01ec [ff59]: ( -167:65369)            	// -(brd[pos1] + brd[pos2])
01ed0001	///	      MY_LN: 01ed [0001]: (    1:    1)            	// myLine
01ee0000	///	     MY_BLK: 01ee [0000]: (    0:    0)            	// myBlock
// data (need initialization code : one-time)
01efffff	///	        BYE: 01ef [ffff]: (   -1:65535)            	// (init: 0) bye
01f0ffff	///	    NXT_BYE: 01f0 [ffff]: (   -1:65535)            	// (init: 0) next bye
01f10000	///	        STT: 01f1 [0000]: (    0:    0)            	// (init: 0) current state
01f20000	///	    NXT_STT: 01f2 [0000]: (    0:    0)            	// (init: 0) next state
01f30000	///	    OUT_STT: 01f3 [0000]: (    0:    0)            	// (init: 0) output state
01f40000	///	    NXT_INP: 01f4 [0000]: (    0:    0)            	// (init: 0) next process input
01f50000	///	     CNT_MG: 01f5 [0000]: (    0:    0)            	// message count
01f601fb	///	   P_MG_LST: 01f6 [01fb]: (  507:  507)            	// message list pointer
01f701f8	///	   A_MG_LST: 01f7 [01f8]: (  504:  504)            
01f80242	///	     MG_LST: 01f8 [0242]: (  578:  578)            	// message pointer list (up to 8+2 messages)
01f90244	///	             01f9 [0244]: (  580:  580)            
01fa0242	///	             01fa [0242]: (  578:  578)            
01fb0242	///	             01fb [0242]: (  578:  578)            
01fc0264	///	             01fc [0264]: (  612:  612)            
01fd0242	///	             01fd [0242]: (  578:  578)            
01fe0000	///	             01fe [0000]: (    0:    0)            
01ff0000	///	             01ff [0000]: (    0:    0)            
02000000	///	             0200 [0000]: (    0:    0)            
02010000	///	             0201 [0000]: (    0:    0)            
// data (need initialization code : after every game -> INI_GM)
0202fffd	///	    CNT_MOV: 0202 [fffd]: (   -3:65533)            	// move counter
02030041	///	       TURN: 0203 [0041]: (   65:  'A')            	// 0 : your turn, 1 : my turn
0204004f	///	     WINNER: 0204 [004f]: (   79:  'O')            	// winner
// BRD : brd[9]
// position : on screen
//    012       123
//    345       456
//    678       789
02050206	///	      A_BRD: 0205 [0206]: (  518:  518)            
0206004f	///	        BRD: 0206 [004f]: (   79:  'O')            
02070058	///	             0207 [0058]: (   88:  'X')            
02080000	///	             0208 [0000]: (    0:    0)            
0209004f	///	             0209 [004f]: (   79:  'O')            
020a004f	///	             020a [004f]: (   79:  'O')            
020b004f	///	             020b [004f]: (   79:  'O')            
020c0058	///	             020c [0058]: (   88:  'X')            
020d0000	///	             020d [0000]: (    0:    0)            
020e0058	///	             020e [0058]: (   88:  'X')            
// data (read-only)
020f0001	///	        EOM: 020f [0001]: (    1:    1)            	// enable output mask (disable input)
02100002	///	        EIM: 0210 [0002]: (    2:    2)            	// enable input mask (disable output)
02110003	///	        IOM: 0211 [0003]: (    3:    3)            	// io mask : 11 means UART is enabled at input and output
0212fff0	///	        AMK: 0212 [fff0]: (  -16:65520)            	// AMK = FFF0 (and mask)
0213000f	///	       AMKN: 0213 [000f]: (   15:   15)            	// AMKN = 000F (and mask negated)
02140001	///	        VH1: 0214 [0001]: (    1:    1)            	// VH1 = 1
02150002	///	        VH2: 0215 [0002]: (    2:    2)            	// VH2 = 2
02160003	///	        VH3: 0216 [0003]: (    3:    3)            	// VH3 = 3
02170004	///	        VH4: 0217 [0004]: (    4:    4)            	// VH4 = 4
02180005	///	        VH5: 0218 [0005]: (    5:    5)            	// VH5 = 5
0219ffff	///	        VM1: 0219 [ffff]: (   -1:65535)            	// VM1 = -1
021afffe	///	        VM2: 021a [fffe]: (   -2:65534)            	// VM2 = -2
021bfffd	///	        VM3: 021b [fffd]: (   -3:65533)            	// VM2 = -3
021cfffc	///	        VM4: 021c [fffc]: (   -4:65532)            	// VM2 = -4
021dfff8	///	        VM8: 021d [fff8]: (   -8:65528)            	// VM2 = -8
021efff7	///	        VM9: 021e [fff7]: (   -9:65527)            	// VM2 = -9
021ffff6	///	       VM10: 021f [fff6]: (  -10:65526)            	// VM10 = -10
02200030	///	       CH_0: 0220 [0030]: (   48:  '0')            
02210031	///	       CH_1: 0221 [0031]: (   49:  '1')            
02220079	///	      CH_LY: 0222 [0079]: (  121:  'y')            
02230058	///	      MY_MK: 0223 [0058]: (   88:  'X')            
0224004f	///	      YR_MK: 0224 [004f]: (   79:  'O')            
022500b0	///	    MY_MK_2: 0225 [00b0]: (  176:  176)            	// (0x58('X') * 2)
0226009e	///	    YR_MK_2: 0226 [009e]: (  158:  158)            	// (0x4F('O') * 2)
02270017	///	    MG_WELC: 0227 [0017]: (   23:   23)            	// MG_WELC length
02280057	///	             0228 [0057]: (   87:  'W')            
02290045	///	             0229 [0045]: (   69:  'E')            
022a004c	///	             022a [004c]: (   76:  'L')            
022b0043	///	             022b [0043]: (   67:  'C')            
022c004f	///	             022c [004f]: (   79:  'O')            
022d004d	///	             022d [004d]: (   77:  'M')            
022e0045	///	             022e [0045]: (   69:  'E')            
022f0020	///	             022f [0020]: (   32:  ' ')            	// ' '
02300054	///	             0230 [0054]: (   84:  'T')            
0231004f	///	             0231 [004f]: (   79:  'O')            
02320020	///	             0232 [0020]: (   32:  ' ')            	// ' '
02330054	///	             0233 [0054]: (   84:  'T')            
02340049	///	             0234 [0049]: (   73:  'I')            
02350043	///	             0235 [0043]: (   67:  'C')            
0236002d	///	             0236 [002d]: (   45:  '-')            
02370054	///	             0237 [0054]: (   84:  'T')            
02380041	///	             0238 [0041]: (   65:  'A')            
02390043	///	             0239 [0043]: (   67:  'C')            
023a002d	///	             023a [002d]: (   45:  '-')            
023b0054	///	             023b [0054]: (   84:  'T')            
023c004f	///	             023c [004f]: (   79:  'O')            
023d0045	///	             023d [0045]: (   69:  'E')            
023e0021	///	             023e [0021]: (   33:  '!')            
023f0001	///	   MG_MY_MV: 023f [0001]: (    1:    1)            	// MG_MY_MV length
02400037	///	  MG_MY_MV0: 0240 [0037]: (   55:  '7')            
02410242	///	    A_MG_NL: 0241 [0242]: (  578:  578)            
02420001	///	      MG_NL: 0242 [0001]: (    1:    1)            	// MG_NL length
0243000a	///	             0243 [000a]: (   10:   10)            	// '\n'
02440008	///	     MG_BYE: 0244 [0008]: (    8:    8)            	// MG_BYE length
02450062	///	             0245 [0062]: (   98:  'b')            
02460079	///	             0246 [0079]: (  121:  'y')            
02470065	///	             0247 [0065]: (  101:  'e')            
0248002d	///	             0248 [002d]: (   45:  '-')            
02490062	///	             0249 [0062]: (   98:  'b')            
024a0079	///	             024a [0079]: (  121:  'y')            
024b0065	///	             024b [0065]: (  101:  'e')            
024c0021	///	             024c [0021]: (   33:  '!')            
024d024e	///	   A_MG_YMV: 024d [024e]: (  590:  590)            
024e000a	///	     MG_YMV: 024e [000a]: (   10:   10)            	// MG_YMV length
024f0079	///	             024f [0079]: (  121:  'y')            
0250006f	///	             0250 [006f]: (  111:  'o')            
02510075	///	             0251 [0075]: (  117:  'u')            
02520072	///	             0252 [0072]: (  114:  'r')            
02530020	///	             0253 [0020]: (   32:  ' ')            	// ' '
0254006d	///	             0254 [006d]: (  109:  'm')            
0255006f	///	             0255 [006f]: (  111:  'o')            
02560076	///	             0256 [0076]: (  118:  'v')            
02570065	///	             0257 [0065]: (  101:  'e')            
02580021	///	             0258 [0021]: (   33:  '!')            
0259025a	///	   A_MG_MMV: 0259 [025a]: (  602:  602)            
025a0008	///	     MG_MMV: 025a [0008]: (    8:    8)            	// MG_MMV length
025b006d	///	             025b [006d]: (  109:  'm')            
025c0079	///	             025c [0079]: (  121:  'y')            
025d0020	///	             025d [0020]: (   32:  ' ')            	// ' '
025e006d	///	             025e [006d]: (  109:  'm')            
025f006f	///	             025f [006f]: (  111:  'o')            
02600076	///	             0260 [0076]: (  118:  'v')            
02610065	///	             0261 [0065]: (  101:  'e')            
02620021	///	             0262 [0021]: (   33:  '!')            
02630264	///	   A_MG_GMO: 0263 [0264]: (  612:  612)            
0264000a	///	     MG_GMO: 0264 [000a]: (   10:   10)            	// MG_GMO length
02650067	///	             0265 [0067]: (  103:  'g')            
02660061	///	             0266 [0061]: (   97:  'a')            
0267006d	///	             0267 [006d]: (  109:  'm')            
02680065	///	             0268 [0065]: (  101:  'e')            
02690020	///	             0269 [0020]: (   32:  ' ')            	// ' '
026a006f	///	             026a [006f]: (  111:  'o')            
026b0076	///	             026b [0076]: (  118:  'v')            
026c0065	///	             026c [0065]: (  101:  'e')            
026d0072	///	             026d [0072]: (  114:  'r')            
026e0021	///	             026e [0021]: (   33:  '!')            
026f0270	///	   A_MG_YWN: 026f [0270]: (  624:  624)            
02700008	///	     MG_YWN: 0270 [0008]: (    8:    8)            	// MG_YWN length
02710079	///	             0271 [0079]: (  121:  'y')            
0272006f	///	             0272 [006f]: (  111:  'o')            
02730075	///	             0273 [0075]: (  117:  'u')            
02740020	///	             0274 [0020]: (   32:  ' ')            	// ' '
02750077	///	             0275 [0077]: (  119:  'w')            
02760069	///	             0276 [0069]: (  105:  'i')            
0277006e	///	             0277 [006e]: (  110:  'n')            
02780021	///	             0278 [0021]: (   33:  '!')            
0279027a	///	   A_MG_IWN: 0279 [027a]: (  634:  634)            
027a0006	///	     MG_IWN: 027a [0006]: (    6:    6)            	// MG_IWN length
027b0049	///	             027b [0049]: (   73:  'I')            
027c0020	///	             027c [0020]: (   32:  ' ')            	// ' '
027d0077	///	             027d [0077]: (  119:  'w')            
027e0069	///	             027e [0069]: (  105:  'i')            
027f006e	///	             027f [006e]: (  110:  'n')            
02800021	///	             0280 [0021]: (   33:  '!')            
02810282	///	   A_MG_TIE: 0281 [0282]: (  642:  642)            
0282000d	///	     MG_TIE: 0282 [000d]: (   13:   13)            	// MG_TIE length
02830069	///	             0283 [0069]: (  105:  'i')            
02840074	///	             0284 [0074]: (  116:  't')            
02850027	///	             0285 [0027]: (   39:  ''')            
02860073	///	             0286 [0073]: (  115:  's')            
02870020	///	             0287 [0020]: (   32:  ' ')            	// ' '
02880061	///	             0288 [0061]: (   97:  'a')            
02890020	///	             0289 [0020]: (   32:  ' ')            	// ' '
028a0074	///	             028a [0074]: (  116:  't')            
028b0069	///	             028b [0069]: (  105:  'i')            
028c0065	///	             028c [0065]: (  101:  'e')            
028d002e	///	             028d [002e]: (   46:  '.')            
028e002e	///	             028e [002e]: (   46:  '.')            
028f002e	///	             028f [002e]: (   46:  '.')            
0290000d	///	    MG_IVMV: 0290 [000d]: (   13:   13)            	// MG_IVMV length
02910069	///	             0291 [0069]: (  105:  'i')            
0292006e	///	             0292 [006e]: (  110:  'n')            
02930076	///	             0293 [0076]: (  118:  'v')            
02940061	///	             0294 [0061]: (   97:  'a')            
0295006c	///	             0295 [006c]: (  108:  'l')            
02960069	///	             0296 [0069]: (  105:  'i')            
02970064	///	             0297 [0064]: (  100:  'd')            
02980020	///	             0298 [0020]: (   32:  ' ')            	// ' '
0299006d	///	             0299 [006d]: (  109:  'm')            
029a006f	///	             029a [006f]: (  111:  'o')            
029b0076	///	             029b [0076]: (  118:  'v')            
029c0065	///	             029c [0065]: (  101:  'e')            
029d0021	///	             029d [0021]: (   33:  '!')            
029e0022	///	     MG_WHG: 029e [0022]: (   34:  '"')            	// MG_WHG length
029f000a	///	             029f [000a]: (   10:   10)            	// '\n'
02a00077	///	             02a0 [0077]: (  119:  'w')            
02a10068	///	             02a1 [0068]: (  104:  'h')            
02a2006f	///	             02a2 [006f]: (  111:  'o')            
02a30020	///	             02a3 [0020]: (   32:  ' ')            	// ' '
02a40067	///	             02a4 [0067]: (  103:  'g')            
02a5006f	///	             02a5 [006f]: (  111:  'o')            
02a60065	///	             02a6 [0065]: (  101:  'e')            
02a70073	///	             02a7 [0073]: (  115:  's')            
02a80020	///	             02a8 [0020]: (   32:  ' ')            	// ' '
02a90066	///	             02a9 [0066]: (  102:  'f')            
02aa0069	///	             02aa [0069]: (  105:  'i')            
02ab0072	///	             02ab [0072]: (  114:  'r')            
02ac0073	///	             02ac [0073]: (  115:  's')            
02ad0074	///	             02ad [0074]: (  116:  't')            
02ae003f	///	             02ae [003f]: (   63:  '?')            
02af0020	///	             02af [0020]: (   32:  ' ')            	// ' '
02b00028	///	             02b0 [0028]: (   40:  '(')            
02b10030	///	             02b1 [0030]: (   48:  '0')            
02b2003a	///	             02b2 [003a]: (   58:  ':')            
02b30059	///	             02b3 [0059]: (   89:  'Y')            
02b4004f	///	             02b4 [004f]: (   79:  'O')            
02b50055	///	             02b5 [0055]: (   85:  'U')            
02b6002c	///	             02b6 [002c]: (   44:  ',')            
02b70020	///	             02b7 [0020]: (   32:  ' ')            	// ' '
02b80031	///	             02b8 [0031]: (   49:  '1')            
02b9003a	///	             02b9 [003a]: (   58:  ':')            
02ba004d	///	             02ba [004d]: (   77:  'M')            
02bb0045	///	             02bb [0045]: (   69:  'E')            
02bc002c	///	             02bc [002c]: (   44:  ',')            
02bd0020	///	             02bd [0020]: (   32:  ' ')            	// ' '
02be0071	///	             02be [0071]: (  113:  'q')            
02bf0029	///	             02bf [0029]: (   41:  ')')            
02c0003a	///	             02c0 [003a]: (   58:  ':')            
02c10004	///	    MG_SEPR: 02c1 [0004]: (    4:    4)            	// MG_SEPR length
02c2002d	///	             02c2 [002d]: (   45:  '-')            
02c3002d	///	             02c3 [002d]: (   45:  '-')            
02c4002d	///	             02c4 [002d]: (   45:  '-')            
02c5000a	///	             02c5 [000a]: (   10:   10)            	// '\n'
02c602c7	///	   A_MG_BRD: 02c6 [02c7]: (  711:  711)            
02c7000c	///	     MG_BRD: 02c7 [000c]: (   12:   12)            	// MG_BRD length
02c8004f	///	             02c8 [004f]: (   79:  'O')            
02c90058	///	             02c9 [0058]: (   88:  'X')            
02ca0033	///	             02ca [0033]: (   51:  '3')            
02cb000a	///	             02cb [000a]: (   10:   10)            	// '\n'
02cc004f	///	             02cc [004f]: (   79:  'O')            
02cd004f	///	             02cd [004f]: (   79:  'O')            
02ce004f	///	             02ce [004f]: (   79:  'O')            
02cf000a	///	             02cf [000a]: (   10:   10)            	// '\n'
02d00058	///	             02d0 [0058]: (   88:  'X')            
02d10038	///	             02d1 [0038]: (   56:  '8')            
02d20058	///	             02d2 [0058]: (   88:  'X')            
02d3000a	///	             02d3 [000a]: (   10:   10)            	// '\n'
02d402da	///	       P_CW: 02d4 [02da]: (  730:  730)            	// CW pointer
02d502d6	///	       A_CW: 02d5 [02d6]: (  726:  726)            
// array for CHK_3 parameter
02d60001	///	         CW: 02d6 [0001]: (    1:    1)            	// offset = 1 (0,1,2)
02d70000	///	             02d7 [0000]: (    0:    0)            	// pos    = 0 (0,1,2)
02d80001	///	             02d8 [0001]: (    1:    1)            	// offset = 1 (3,4,5)
02d90003	///	             02d9 [0003]: (    3:    3)            	// pos    = 3 (3,4,5)
02da0001	///	             02da [0001]: (    1:    1)            	// offset = 1 (6,7,8)
02db0006	///	             02db [0006]: (    6:    6)            	// pos    = 6 (6,7,8)
02dc0003	///	             02dc [0003]: (    3:    3)            	// offset = 3 (0,3,6)
02dd0000	///	             02dd [0000]: (    0:    0)            	// pos    = 0 (0,3,6)
02de0003	///	             02de [0003]: (    3:    3)            	// offset = 3 (1,4,7)
02df0001	///	             02df [0001]: (    1:    1)            	// pos    = 1 (1,4,7)
02e00003	///	             02e0 [0003]: (    3:    3)            	// offset = 3 (2,5,8)
02e10002	///	             02e1 [0002]: (    2:    2)            	// pos    = 2 (2,5,8)
02e20004	///	             02e2 [0004]: (    4:    4)            	// offset = 4 (0,4,8)
02e30000	///	             02e3 [0000]: (    0:    0)            	// pos    = 0 (0,4,8)
02e40002	///	             02e4 [0002]: (    2:    2)            	// offset = 2 (2,4,6)
02e50002	///	             02e5 [0002]: (    2:    2)            	// pos    = 2 (2,4,6)
02e602ed	///	      P_HVD: 02e6 [02ed]: (  749:  749)            	// HVD pointer
02e702e8	///	      A_HVD: 02e7 [02e8]: (  744:  744)            
02e802f0	///	       A_H1: 02e8 [02f0]: (  752:  752)            
02e902f9	///	       A_H2: 02e9 [02f9]: (  761:  761)            
02ea0302	///	       A_V1: 02ea [0302]: (  770:  770)            
02eb030b	///	       A_V2: 02eb [030b]: (  779:  779)            
02ec0314	///	       A_D1: 02ec [0314]: (  788:  788)            
02ed031d	///	       A_D2: 02ed [031d]: (  797:  797)            
02ee0326	///	       A_D3: 02ee [0326]: (  806:  806)            
02ef032b	///	       A_D4: 02ef [032b]: (  811:  811)            
02f00001	///	         H1: 02f0 [0001]: (    1:    1)            	// ( H1[0] = 1)
02f10002	///	             02f1 [0002]: (    2:    2)            	// ( H1[1] = 2)
02f20000	///	             02f2 [0000]: (    0:    0)            	// ( H1[2] = 0)
02f30004	///	             02f3 [0004]: (    4:    4)            	// ( H1[3] = 4)
02f40005	///	             02f4 [0005]: (    5:    5)            	// ( H1[4] = 5)
02f50003	///	             02f5 [0003]: (    3:    3)            	// ( H1[5] = 3)
02f60007	///	             02f6 [0007]: (    7:    7)            	// ( H1[6] = 7)
02f70008	///	             02f7 [0008]: (    8:    8)            	// ( H1[7] = 8)
02f80006	///	             02f8 [0006]: (    6:    6)            	// ( H1[8] = 6)
02f90002	///	         H2: 02f9 [0002]: (    2:    2)            	// ( H2[0] = 2)
02fa0000	///	             02fa [0000]: (    0:    0)            	// ( H2[1] = 0)
02fb0001	///	             02fb [0001]: (    1:    1)            	// ( H2[2] = 1)
02fc0005	///	             02fc [0005]: (    5:    5)            	// ( H2[3] = 5)
02fd0003	///	             02fd [0003]: (    3:    3)            	// ( H2[4] = 3)
02fe0004	///	             02fe [0004]: (    4:    4)            	// ( H2[5] = 4)
02ff0008	///	             02ff [0008]: (    8:    8)            	// ( H2[6] = 8)
03000006	///	             0300 [0006]: (    6:    6)            	// ( H2[7] = 6)
03010007	///	             0301 [0007]: (    7:    7)            	// ( H2[8] = 7)
03020003	///	         V1: 0302 [0003]: (    3:    3)            	// ( V1[0] = 3)
03030004	///	             0303 [0004]: (    4:    4)            	// ( V1[1] = 4)
03040005	///	             0304 [0005]: (    5:    5)            	// ( V1[2] = 5)
03050006	///	             0305 [0006]: (    6:    6)            	// ( V1[3] = 6)
03060007	///	             0306 [0007]: (    7:    7)            	// ( V1[4] = 7)
03070008	///	             0307 [0008]: (    8:    8)            	// ( V1[5] = 8)
03080000	///	             0308 [0000]: (    0:    0)            	// ( V1[6] = 0)
03090001	///	             0309 [0001]: (    1:    1)            	// ( V1[7] = 1)
030a0002	///	             030a [0002]: (    2:    2)            	// ( V1[8] = 2)
030b0006	///	         V2: 030b [0006]: (    6:    6)            	// ( V2[0] = 6)
030c0007	///	             030c [0007]: (    7:    7)            	// ( V2[1] = 7)
030d0008	///	             030d [0008]: (    8:    8)            	// ( V2[2] = 8)
030e0000	///	             030e [0000]: (    0:    0)            	// ( V2[3] = 0)
030f0001	///	             030f [0001]: (    1:    1)            	// ( V2[4] = 1)
03100002	///	             0310 [0002]: (    2:    2)            	// ( V2[5] = 2)
03110003	///	             0311 [0003]: (    3:    3)            	// ( V2[6] = 3)
03120004	///	             0312 [0004]: (    4:    4)            	// ( V2[7] = 4)
03130005	///	             0313 [0005]: (    5:    5)            	// ( V2[8] = 5)
03140004	///	         D1: 0314 [0004]: (    4:    4)            	// ( D1[0] =  4)
0315ffff	///	             0315 [ffff]: (   -1:65535)            	// ( D1[1] = -1)
03160004	///	             0316 [0004]: (    4:    4)            	// ( D1[2] =  4)
0317ffff	///	             0317 [ffff]: (   -1:65535)            	// ( D1[3] = -1)
03180000	///	             0318 [0000]: (    0:    0)            	// ( D1[4] =  0)
0319ffff	///	             0319 [ffff]: (   -1:65535)            	// ( D1[5] = -1)
031a0004	///	             031a [0004]: (    4:    4)            	// ( D1[6] =  4)
031bffff	///	             031b [ffff]: (   -1:65535)            	// ( D1[7] = -1)
031c0004	///	             031c [0004]: (    4:    4)            	// ( D1[8] =  4)
031d0008	///	         D2: 031d [0008]: (    8:    8)            	// ( D2[0] =  8)
031effff	///	             031e [ffff]: (   -1:65535)            	// ( D2[1] = -1)
031f0006	///	             031f [0006]: (    6:    6)            	// ( D2[2] =  6)
0320ffff	///	             0320 [ffff]: (   -1:65535)            	// ( D2[3] = -1)
03210008	///	             0321 [0008]: (    8:    8)            	// ( D2[4] =  8)
0322ffff	///	             0322 [ffff]: (   -1:65535)            	// ( D2[5] = -1)
03230002	///	             0323 [0002]: (    2:    2)            	// ( D2[6] =  2)
0324ffff	///	             0324 [ffff]: (   -1:65535)            	// ( D2[7] = -1)
03250000	///	             0325 [0000]: (    0:    0)            	// ( D2[8] =  0)
0326ffff	///	         D3: 0326 [ffff]: (   -1:65535)            	// ( D3[0] = -1)
0327ffff	///	             0327 [ffff]: (   -1:65535)            	// ( D3[1] = -1)
0328ffff	///	             0328 [ffff]: (   -1:65535)            	// ( D3[2] = -1)
0329ffff	///	             0329 [ffff]: (   -1:65535)            	// ( D3[3] = -1)
032a0002	///	             032a [0002]: (    2:    2)            	// ( D3[4] =  2)
032bffff	///	         D4: 032b [ffff]: (   -1:65535)            	// ( D3[5] = -1)
032cffff	///	             032c [ffff]: (   -1:65535)            	// ( D3[6] = -1)
032dffff	///	             032d [ffff]: (   -1:65535)            	// ( D3[7] = -1)
032effff	///	             032e [ffff]: (   -1:65535)            	// ( D3[8] = -1)
032f0006	///	             032f [0006]: (    6:    6)            	// ( D4[4] =  6)
f0000000	///	end-of-memory
